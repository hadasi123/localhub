{"ast":null,"code":"var _s = $RefreshSig$();\n// Data management hook - Business Logic Layer\n\nimport { useState, useEffect, useCallback } from 'react';\nimport dataService from '../services/dataService';\nexport const useData = type => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchItems = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await dataService.getAllItems(type);\n      setItems(data);\n    } catch (err) {\n      setError(err.message);\n      console.error(`Error fetching ${type} items:`, err);\n    } finally {\n      setLoading(false);\n    }\n  }, [type]);\n  const addItem = useCallback(async itemData => {\n    try {\n      setError(null);\n      const newItem = await dataService.addItem(type, itemData);\n      setItems(prev => [...prev, newItem]);\n      return newItem;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  }, [type]);\n  const updateItem = useCallback(async (id, updates) => {\n    try {\n      setError(null);\n      const updatedItem = await dataService.updateItem(type, id, updates);\n      setItems(prev => prev.map(item => item.id === id ? updatedItem : item));\n      return updatedItem;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  }, [type]);\n  const deleteItem = useCallback(async id => {\n    try {\n      setError(null);\n      await dataService.deleteItem(type, id);\n      setItems(prev => prev.filter(item => item.id !== id));\n      return true;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  }, [type]);\n  const searchItems = useCallback(async query => {\n    try {\n      setError(null);\n      const results = await dataService.searchItems(type, query);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  }, [type]);\n  const getItemsByCategory = useCallback(async category => {\n    try {\n      setError(null);\n      const results = await dataService.getItemsByCategory(type, category);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  }, [type]);\n  const getRecentItems = useCallback(async (limit = 10) => {\n    try {\n      setError(null);\n      const results = await dataService.getRecentItems(type, limit);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  }, [type]);\n  useEffect(() => {\n    fetchItems();\n  }, [fetchItems]);\n  return {\n    items,\n    loading,\n    error,\n    addItem,\n    updateItem,\n    deleteItem,\n    searchItems,\n    getItemsByCategory,\n    getRecentItems,\n    refresh: fetchItems\n  };\n};\n_s(useData, \"oacoiO6th62d52jGkIIVT0vHtBs=\");","map":{"version":3,"names":["useState","useEffect","useCallback","dataService","useData","type","_s","items","setItems","loading","setLoading","error","setError","fetchItems","data","getAllItems","err","message","console","addItem","itemData","newItem","prev","updateItem","id","updates","updatedItem","map","item","deleteItem","filter","searchItems","query","results","getItemsByCategory","category","getRecentItems","limit","refresh"],"sources":["/Users/hadascohen/experiments/localhub/src/hooks/useData.js"],"sourcesContent":["// Data management hook - Business Logic Layer\n\nimport { useState, useEffect, useCallback } from 'react';\nimport dataService from '../services/dataService';\n\nexport const useData = (type) => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchItems = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await dataService.getAllItems(type);\n      setItems(data);\n    } catch (err) {\n      setError(err.message);\n      console.error(`Error fetching ${type} items:`, err);\n    } finally {\n      setLoading(false);\n    }\n  }, [type]);\n\n  const addItem = useCallback(async (itemData) => {\n    try {\n      setError(null);\n      const newItem = await dataService.addItem(type, itemData);\n      setItems(prev => [...prev, newItem]);\n      return newItem;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  }, [type]);\n\n  const updateItem = useCallback(async (id, updates) => {\n    try {\n      setError(null);\n      const updatedItem = await dataService.updateItem(type, id, updates);\n      setItems(prev => prev.map(item => \n        item.id === id ? updatedItem : item\n      ));\n      return updatedItem;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  }, [type]);\n\n  const deleteItem = useCallback(async (id) => {\n    try {\n      setError(null);\n      await dataService.deleteItem(type, id);\n      setItems(prev => prev.filter(item => item.id !== id));\n      return true;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  }, [type]);\n\n  const searchItems = useCallback(async (query) => {\n    try {\n      setError(null);\n      const results = await dataService.searchItems(type, query);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  }, [type]);\n\n  const getItemsByCategory = useCallback(async (category) => {\n    try {\n      setError(null);\n      const results = await dataService.getItemsByCategory(type, category);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  }, [type]);\n\n  const getRecentItems = useCallback(async (limit = 10) => {\n    try {\n      setError(null);\n      const results = await dataService.getRecentItems(type, limit);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  }, [type]);\n\n  useEffect(() => {\n    fetchItems();\n  }, [fetchItems]);\n\n  return {\n    items,\n    loading,\n    error,\n    addItem,\n    updateItem,\n    deleteItem,\n    searchItems,\n    getItemsByCategory,\n    getRecentItems,\n    refresh: fetchItems\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}