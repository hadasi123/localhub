{"ast":null,"code":"// Data service for LocalHub - Data Layer\n\nimport { createLostAndFoundItem, createCarpoolItem, createUpdateItem, createEducationItem, createBusinessItem, createPhoneBookItem, createSellItem } from '../types';\n\n// Local storage keys\nconst STORAGE_KEYS = {\n  LOST_AND_FOUND: 'localhub_lost_and_found',\n  CARPOOL: 'localhub_carpool',\n  UPDATES: 'localhub_updates',\n  EDUCATION: 'localhub_education',\n  BUSINESS: 'localhub_business',\n  PHONE_BOOK: 'localhub_phone_book',\n  SELL: 'localhub_sell'\n};\n\n// Data service class\nclass DataService {\n  constructor() {\n    this.initializeData();\n  }\n\n  // Initialize with sample data if storage is empty\n  initializeData() {\n    Object.values(STORAGE_KEYS).forEach(key => {\n      if (!localStorage.getItem(key)) {\n        localStorage.setItem(key, JSON.stringify([]));\n      }\n    });\n  }\n\n  // Generic CRUD operations\n  async getAllItems(type) {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS[type.toUpperCase()]);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error(`Error getting ${type} items:`, error);\n      return [];\n    }\n  }\n  async getItem(type, id) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.find(item => item.id === id);\n    } catch (error) {\n      console.error(`Error getting ${type} item:`, error);\n      return null;\n    }\n  }\n  async addItem(type, itemData) {\n    try {\n      const items = await this.getAllItems(type);\n      const newItem = this.createItemByType(type, {\n        ...itemData,\n        id: this.generateId()\n      });\n      items.push(newItem);\n      await this.saveItems(type, items);\n      return newItem;\n    } catch (error) {\n      console.error(`Error adding ${type} item:`, error);\n      throw error;\n    }\n  }\n  async updateItem(type, id, updates) {\n    try {\n      const items = await this.getAllItems(type);\n      const index = items.findIndex(item => item.id === id);\n      if (index === -1) {\n        throw new Error('Item not found');\n      }\n      items[index] = {\n        ...items[index],\n        ...updates,\n        updatedAt: new Date().toISOString()\n      };\n      await this.saveItems(type, items);\n      return items[index];\n    } catch (error) {\n      console.error(`Error updating ${type} item:`, error);\n      throw error;\n    }\n  }\n  async deleteItem(type, id) {\n    try {\n      const items = await this.getAllItems(type);\n      const filteredItems = items.filter(item => item.id !== id);\n      await this.saveItems(type, filteredItems);\n      return true;\n    } catch (error) {\n      console.error(`Error deleting ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  // Save items to localStorage\n  async saveItems(type, items) {\n    try {\n      localStorage.setItem(STORAGE_KEYS[type.toUpperCase()], JSON.stringify(items));\n    } catch (error) {\n      console.error(`Error saving ${type} items:`, error);\n      throw error;\n    }\n  }\n\n  // Create item by type\n  createItemByType(type, data) {\n    switch (type.toLowerCase()) {\n      case 'lost-and-found':\n        return createLostAndFoundItem(data);\n      case 'carpool':\n        return createCarpoolItem(data);\n      case 'updates':\n        return createUpdateItem(data);\n      case 'education':\n        return createEducationItem(data);\n      case 'business':\n        return createBusinessItem(data);\n      case 'phone-book':\n        return createPhoneBookItem(data);\n      case 'sell':\n        return createSellItem(data);\n      default:\n        throw new Error(`Unknown item type: ${type}`);\n    }\n  }\n\n  // Generate unique ID\n  generateId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n\n  // Search items\n  async searchItems(type, query) {\n    try {\n      const items = await this.getAllItems(type);\n      const searchTerm = query.toLowerCase();\n      return items.filter(item => {\n        return Object.values(item).some(value => typeof value === 'string' && value.toLowerCase().includes(searchTerm));\n      });\n    } catch (error) {\n      console.error(`Error searching ${type} items:`, error);\n      return [];\n    }\n  }\n\n  // Get items by category\n  async getItemsByCategory(type, category) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.filter(item => item.category === category);\n    } catch (error) {\n      console.error(`Error getting ${type} items by category:`, error);\n      return [];\n    }\n  }\n\n  // Get recent items\n  async getRecentItems(type, limit = 10) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).slice(0, limit);\n    } catch (error) {\n      console.error(`Error getting recent ${type} items:`, error);\n      return [];\n    }\n  }\n}\n\n// Create singleton instance\nconst dataService = new DataService();\nexport default dataService;","map":{"version":3,"names":["createLostAndFoundItem","createCarpoolItem","createUpdateItem","createEducationItem","createBusinessItem","createPhoneBookItem","createSellItem","STORAGE_KEYS","LOST_AND_FOUND","CARPOOL","UPDATES","EDUCATION","BUSINESS","PHONE_BOOK","SELL","DataService","constructor","initializeData","Object","values","forEach","key","localStorage","getItem","setItem","JSON","stringify","getAllItems","type","data","toUpperCase","parse","error","console","id","items","find","item","addItem","itemData","newItem","createItemByType","generateId","push","saveItems","updateItem","updates","index","findIndex","Error","updatedAt","Date","toISOString","deleteItem","filteredItems","filter","toLowerCase","now","toString","Math","random","substr","searchItems","query","searchTerm","some","value","includes","getItemsByCategory","category","getRecentItems","limit","sort","a","b","createdAt","slice","dataService"],"sources":["/Users/hadascohen/experiments/localhub/src/services/dataService.js"],"sourcesContent":["// Data service for LocalHub - Data Layer\n\nimport { \n  createLostAndFoundItem,\n  createCarpoolItem,\n  createUpdateItem,\n  createEducationItem,\n  createBusinessItem,\n  createPhoneBookItem,\n  createSellItem\n} from '../types';\n\n// Local storage keys\nconst STORAGE_KEYS = {\n  LOST_AND_FOUND: 'localhub_lost_and_found',\n  CARPOOL: 'localhub_carpool',\n  UPDATES: 'localhub_updates',\n  EDUCATION: 'localhub_education',\n  BUSINESS: 'localhub_business',\n  PHONE_BOOK: 'localhub_phone_book',\n  SELL: 'localhub_sell'\n};\n\n// Data service class\nclass DataService {\n  constructor() {\n    this.initializeData();\n  }\n\n  // Initialize with sample data if storage is empty\n  initializeData() {\n    Object.values(STORAGE_KEYS).forEach(key => {\n      if (!localStorage.getItem(key)) {\n        localStorage.setItem(key, JSON.stringify([]));\n      }\n    });\n  }\n\n  // Generic CRUD operations\n  async getAllItems(type) {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS[type.toUpperCase()]);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error(`Error getting ${type} items:`, error);\n      return [];\n    }\n  }\n\n  async getItem(type, id) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.find(item => item.id === id);\n    } catch (error) {\n      console.error(`Error getting ${type} item:`, error);\n      return null;\n    }\n  }\n\n  async addItem(type, itemData) {\n    try {\n      const items = await this.getAllItems(type);\n      const newItem = this.createItemByType(type, {\n        ...itemData,\n        id: this.generateId()\n      });\n      items.push(newItem);\n      await this.saveItems(type, items);\n      return newItem;\n    } catch (error) {\n      console.error(`Error adding ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  async updateItem(type, id, updates) {\n    try {\n      const items = await this.getAllItems(type);\n      const index = items.findIndex(item => item.id === id);\n      if (index === -1) {\n        throw new Error('Item not found');\n      }\n      items[index] = {\n        ...items[index],\n        ...updates,\n        updatedAt: new Date().toISOString()\n      };\n      await this.saveItems(type, items);\n      return items[index];\n    } catch (error) {\n      console.error(`Error updating ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  async deleteItem(type, id) {\n    try {\n      const items = await this.getAllItems(type);\n      const filteredItems = items.filter(item => item.id !== id);\n      await this.saveItems(type, filteredItems);\n      return true;\n    } catch (error) {\n      console.error(`Error deleting ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  // Save items to localStorage\n  async saveItems(type, items) {\n    try {\n      localStorage.setItem(STORAGE_KEYS[type.toUpperCase()], JSON.stringify(items));\n    } catch (error) {\n      console.error(`Error saving ${type} items:`, error);\n      throw error;\n    }\n  }\n\n  // Create item by type\n  createItemByType(type, data) {\n    switch (type.toLowerCase()) {\n      case 'lost-and-found':\n        return createLostAndFoundItem(data);\n      case 'carpool':\n        return createCarpoolItem(data);\n      case 'updates':\n        return createUpdateItem(data);\n      case 'education':\n        return createEducationItem(data);\n      case 'business':\n        return createBusinessItem(data);\n      case 'phone-book':\n        return createPhoneBookItem(data);\n      case 'sell':\n        return createSellItem(data);\n      default:\n        throw new Error(`Unknown item type: ${type}`);\n    }\n  }\n\n  // Generate unique ID\n  generateId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n\n  // Search items\n  async searchItems(type, query) {\n    try {\n      const items = await this.getAllItems(type);\n      const searchTerm = query.toLowerCase();\n      return items.filter(item => {\n        return Object.values(item).some(value => \n          typeof value === 'string' && value.toLowerCase().includes(searchTerm)\n        );\n      });\n    } catch (error) {\n      console.error(`Error searching ${type} items:`, error);\n      return [];\n    }\n  }\n\n  // Get items by category\n  async getItemsByCategory(type, category) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.filter(item => item.category === category);\n    } catch (error) {\n      console.error(`Error getting ${type} items by category:`, error);\n      return [];\n    }\n  }\n\n  // Get recent items\n  async getRecentItems(type, limit = 10) {\n    try {\n      const items = await this.getAllItems(type);\n      return items\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n        .slice(0, limit);\n    } catch (error) {\n      console.error(`Error getting recent ${type} items:`, error);\n      return [];\n    }\n  }\n}\n\n// Create singleton instance\nconst dataService = new DataService();\n\nexport default dataService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}