{"ast":null,"code":"var _s = $RefreshSig$();\n// Weather hook - Business Logic Layer\n\nimport { useState, useEffect } from 'react';\nimport weatherService from '../services/weatherService';\nexport const useWeather = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchWeather = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const weatherData = await weatherService.getCurrentWeather();\n      setWeather(weatherData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching weather:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const refreshWeather = () => {\n    fetchWeather();\n  };\n  const getWeatherIcon = weatherType => {\n    return weatherService.getWeatherIcon(weatherType);\n  };\n  const formatTemperature = temp => {\n    return weatherService.formatTemperature(temp);\n  };\n  const getWeatherDescription = weather => {\n    return weatherService.getWeatherDescription(weather);\n  };\n  useEffect(() => {\n    fetchWeather();\n\n    // Refresh weather every 10 minutes\n    const interval = setInterval(fetchWeather, 10 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return {\n    weather,\n    loading,\n    error,\n    refreshWeather,\n    getWeatherIcon,\n    formatTemperature,\n    getWeatherDescription\n  };\n};\n_s(useWeather, \"TVsks5rssGOnhEQ1DibgKtVD/q4=\");","map":{"version":3,"names":["useState","useEffect","weatherService","useWeather","_s","weather","setWeather","loading","setLoading","error","setError","fetchWeather","weatherData","getCurrentWeather","err","message","console","refreshWeather","getWeatherIcon","weatherType","formatTemperature","temp","getWeatherDescription","interval","setInterval","clearInterval"],"sources":["/Users/hadascohen/experiments/localhub/src/hooks/useWeather.js"],"sourcesContent":["// Weather hook - Business Logic Layer\n\nimport { useState, useEffect } from 'react';\nimport weatherService from '../services/weatherService';\n\nexport const useWeather = () => {\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchWeather = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const weatherData = await weatherService.getCurrentWeather();\n      setWeather(weatherData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching weather:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshWeather = () => {\n    fetchWeather();\n  };\n\n  const getWeatherIcon = (weatherType) => {\n    return weatherService.getWeatherIcon(weatherType);\n  };\n\n  const formatTemperature = (temp) => {\n    return weatherService.formatTemperature(temp);\n  };\n\n  const getWeatherDescription = (weather) => {\n    return weatherService.getWeatherDescription(weather);\n  };\n\n  useEffect(() => {\n    fetchWeather();\n    \n    // Refresh weather every 10 minutes\n    const interval = setInterval(fetchWeather, 10 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  return {\n    weather,\n    loading,\n    error,\n    refreshWeather,\n    getWeatherIcon,\n    formatTemperature,\n    getWeatherDescription\n  };\n};\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,4BAA4B;AAEvD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAME,WAAW,GAAG,MAAMV,cAAc,CAACW,iBAAiB,CAAC,CAAC;MAC5DP,UAAU,CAACM,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;MACrBC,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEK,GAAG,CAAC;IAC/C,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BN,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMO,cAAc,GAAIC,WAAW,IAAK;IACtC,OAAOjB,cAAc,CAACgB,cAAc,CAACC,WAAW,CAAC;EACnD,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClC,OAAOnB,cAAc,CAACkB,iBAAiB,CAACC,IAAI,CAAC;EAC/C,CAAC;EAED,MAAMC,qBAAqB,GAAIjB,OAAO,IAAK;IACzC,OAAOH,cAAc,CAACoB,qBAAqB,CAACjB,OAAO,CAAC;EACtD,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACdU,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMY,QAAQ,GAAGC,WAAW,CAACb,YAAY,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAE1D,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLlB,OAAO;IACPE,OAAO;IACPE,KAAK;IACLQ,cAAc;IACdC,cAAc;IACdE,iBAAiB;IACjBE;EACF,CAAC;AACH,CAAC;AAAClB,EAAA,CArDWD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}