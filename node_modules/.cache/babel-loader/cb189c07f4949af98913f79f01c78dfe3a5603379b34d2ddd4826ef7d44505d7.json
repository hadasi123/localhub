{"ast":null,"code":"// Weather service for LocalHub - Data Layer\nimport{createWeatherData,WeatherTypes}from'../types';// Weather icons mapping\nexport const weatherIcons={[WeatherTypes.CLEAR]:'☀️',[WeatherTypes.CLOUDY]:'☁️',[WeatherTypes.RAINY]:'🌧️',[WeatherTypes.STORMY]:'⛈️',[WeatherTypes.SNOWY]:'❄️',[WeatherTypes.FOGGY]:'🌫️'};// Weather service class\nclass WeatherService{constructor(){this.cache=null;this.cacheExpiry=10*60*1000;// 10 minutes\nthis.apiUrl='https://api.open-meteo.com/v1/forecast';this.israelCoordinates={latitude:34.84,longitude:32.06};}// Get current weather for Israel using Open-Meteo API\nasync getCurrentWeather(){try{// Check cache first\nif(this.cache&&this.isCacheValid()){return this.cache;}// Fetch real weather data from Open-Meteo API\nconst weatherData=await this.fetchWeatherFromAPI();// Cache the result\nthis.cache=weatherData;this.cacheTimestamp=Date.now();return weatherData;}catch(error){console.error('Error fetching weather data:',error);// Return fallback data if API fails\nreturn this.getFallbackWeatherData();}}// Fetch weather data from Open-Meteo API\nasync fetchWeatherFromAPI(){const params=new URLSearchParams({latitude:this.israelCoordinates.latitude.toString(),longitude:this.israelCoordinates.longitude.toString(),daily:'apparent_temperature_mean,temperature_2m_max,temperature_2m_min,weather_code',timezone:'Asia/Jerusalem',forecast_days:1});const response=await fetch(\"\".concat(this.apiUrl,\"?\").concat(params));if(!response.ok){throw new Error(\"Weather API error: \".concat(response.status));}const data=await response.json();// Extract today's weather data\nconst today=data.daily.time[0];const temperature=Math.round(data.daily.apparent_temperature_mean[0]);const maxTemp=Math.round(data.daily.temperature_2m_max[0]);const minTemp=Math.round(data.daily.temperature_2m_min[0]);const weatherCode=data.daily.weather_code[0];// Convert weather code to description and icon\nconst{description,icon}=this.getWeatherFromCode(weatherCode);return createWeatherData({temperature:temperature,description:description,icon:icon,location:'Israel',maxTemperature:maxTemp,minTemperature:minTemp,timestamp:new Date().toISOString()});}// Convert WMO weather code to description and icon\ngetWeatherFromCode(code){// WMO Weather interpretation codes (WW)\nconst weatherCodes={0:{description:'שמיים בהירים',icon:WeatherTypes.CLEAR},1:{description:'לרוב שמיים בהירים',icon:WeatherTypes.CLEAR},2:{description:'מעונן חלקית',icon:WeatherTypes.CLOUDY},3:{description:'עננות מורגשת',icon:WeatherTypes.CLOUDY},45:{description:'עננות',icon:WeatherTypes.FOGGY},48:{description:'עננות',icon:WeatherTypes.FOGGY},51:{description:'עננות קלה',icon:WeatherTypes.RAINY},53:{description:'עננות בינונית',icon:WeatherTypes.RAINY},55:{description:'עננות כבדה',icon:WeatherTypes.RAINY},61:{description:'טפטוף לפרקים',icon:WeatherTypes.RAINY},63:{description:'גשום',icon:WeatherTypes.RAINY},65:{description:'גשם כבד',icon:WeatherTypes.RAINY},71:{description:'שלג',icon:WeatherTypes.SNOWY},73:{description:'שלג',icon:WeatherTypes.SNOWY},75:{description:'שלג',icon:WeatherTypes.SNOWY},77:{description:'שלג',icon:WeatherTypes.SNOWY},80:{description:'ממטרי גשם',icon:WeatherTypes.RAINY},81:{description:'גשם',icon:WeatherTypes.RAINY},82:{description:'סופת גשמים',icon:WeatherTypes.RAINY},85:{description:'שלג',icon:WeatherTypes.SNOWY},86:{description:'מושלג',icon:WeatherTypes.SNOWY},95:{description:'סערת ברקים',icon:WeatherTypes.STORMY},96:{description:'סוער וגשום',icon:WeatherTypes.STORMY},99:{description:'סוער וגשום',icon:WeatherTypes.STORMY}};return weatherCodes[code]||{description:'Unknown',icon:WeatherTypes.CLEAR};}// Fallback weather data if API fails\ngetFallbackWeatherData(){return createWeatherData({temperature:25,description:'Partly cloudy',icon:WeatherTypes.CLOUDY,location:'Israel',maxTemperature:28,minTemperature:22,timestamp:new Date().toISOString()});}// Check if cache is still valid\nisCacheValid(){return this.cacheTimestamp&&Date.now()-this.cacheTimestamp<this.cacheExpiry;}// Get weather icon\ngetWeatherIcon(weatherType){return weatherIcons[weatherType]||weatherIcons[WeatherTypes.CLEAR];}// Format temperature\nformatTemperature(temp){return\"\".concat(temp,\"\\xB0C\");}// Get weather description with emoji\ngetWeatherDescription(weather){const icon=this.getWeatherIcon(weather.icon);return\"\".concat(icon,\" \").concat(weather.description);}}// Create singleton instance\nconst weatherService=new WeatherService();export default weatherService;","map":{"version":3,"names":["createWeatherData","WeatherTypes","weatherIcons","CLEAR","CLOUDY","RAINY","STORMY","SNOWY","FOGGY","WeatherService","constructor","cache","cacheExpiry","apiUrl","israelCoordinates","latitude","longitude","getCurrentWeather","isCacheValid","weatherData","fetchWeatherFromAPI","cacheTimestamp","Date","now","error","console","getFallbackWeatherData","params","URLSearchParams","toString","daily","timezone","forecast_days","response","fetch","concat","ok","Error","status","data","json","today","time","temperature","Math","round","apparent_temperature_mean","maxTemp","temperature_2m_max","minTemp","temperature_2m_min","weatherCode","weather_code","description","icon","getWeatherFromCode","location","maxTemperature","minTemperature","timestamp","toISOString","code","weatherCodes","getWeatherIcon","weatherType","formatTemperature","temp","getWeatherDescription","weather","weatherService"],"sources":["/Users/hadascohen/experiments/localhub/src/services/weatherService.js"],"sourcesContent":["// Weather service for LocalHub - Data Layer\n\nimport { createWeatherData, WeatherTypes } from '../types';\n\n// Weather icons mapping\nexport const weatherIcons = {\n  [WeatherTypes.CLEAR]: '☀️',\n  [WeatherTypes.CLOUDY]: '☁️',\n  [WeatherTypes.RAINY]: '🌧️',\n  [WeatherTypes.STORMY]: '⛈️',\n  [WeatherTypes.SNOWY]: '❄️',\n  [WeatherTypes.FOGGY]: '🌫️'\n};\n\n// Weather service class\nclass WeatherService {\n  constructor() {\n    this.cache = null;\n    this.cacheExpiry = 10 * 60 * 1000; // 10 minutes\n    this.apiUrl = 'https://api.open-meteo.com/v1/forecast';\n    this.israelCoordinates = {\n      latitude: 34.84,\n      longitude: 32.06\n    };\n  }\n\n  // Get current weather for Israel using Open-Meteo API\n  async getCurrentWeather() {\n    try {\n      // Check cache first\n      if (this.cache && this.isCacheValid()) {\n        return this.cache;\n      }\n\n      // Fetch real weather data from Open-Meteo API\n      const weatherData = await this.fetchWeatherFromAPI();\n      \n      // Cache the result\n      this.cache = weatherData;\n      this.cacheTimestamp = Date.now();\n      \n      return weatherData;\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      // Return fallback data if API fails\n      return this.getFallbackWeatherData();\n    }\n  }\n\n  // Fetch weather data from Open-Meteo API\n  async fetchWeatherFromAPI() {\n    const params = new URLSearchParams({\n      latitude: this.israelCoordinates.latitude.toString(),\n      longitude: this.israelCoordinates.longitude.toString(),\n      daily: 'apparent_temperature_mean,temperature_2m_max,temperature_2m_min,weather_code',\n      timezone: 'Asia/Jerusalem',\n      forecast_days: 1\n    });\n\n    const response = await fetch(`${this.apiUrl}?${params}`);\n    \n    if (!response.ok) {\n      throw new Error(`Weather API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    // Extract today's weather data\n    const today = data.daily.time[0];\n    const temperature = Math.round(data.daily.apparent_temperature_mean[0]);\n    const maxTemp = Math.round(data.daily.temperature_2m_max[0]);\n    const minTemp = Math.round(data.daily.temperature_2m_min[0]);\n    const weatherCode = data.daily.weather_code[0];\n\n    // Convert weather code to description and icon\n    const { description, icon } = this.getWeatherFromCode(weatherCode);\n\n    return createWeatherData({\n      temperature: temperature,\n      description: description,\n      icon: icon,\n      location: 'Israel',\n      maxTemperature: maxTemp,\n      minTemperature: minTemp,\n      timestamp: new Date().toISOString()\n    });\n  }\n\n  // Convert WMO weather code to description and icon\n  getWeatherFromCode(code) {\n    // WMO Weather interpretation codes (WW)\n    const weatherCodes = {\n      0: { description: 'שמיים בהירים', icon: WeatherTypes.CLEAR },\n      1: { description: 'לרוב שמיים בהירים', icon: WeatherTypes.CLEAR },\n      2: { description: 'מעונן חלקית', icon: WeatherTypes.CLOUDY },\n      3: { description: 'עננות מורגשת', icon: WeatherTypes.CLOUDY },\n      45: { description: 'עננות', icon: WeatherTypes.FOGGY },\n      48: { description: 'עננות', icon: WeatherTypes.FOGGY },\n      51: { description: 'עננות קלה', icon: WeatherTypes.RAINY },\n      53: { description: 'עננות בינונית', icon: WeatherTypes.RAINY },\n      55: { description: 'עננות כבדה', icon: WeatherTypes.RAINY },\n      61: { description: 'טפטוף לפרקים', icon: WeatherTypes.RAINY },\n      63: { description: 'גשום', icon: WeatherTypes.RAINY },\n      65: { description: 'גשם כבד', icon: WeatherTypes.RAINY },\n      71: { description: 'שלג', icon: WeatherTypes.SNOWY },\n      73: { description: 'שלג', icon: WeatherTypes.SNOWY },\n      75: { description: 'שלג', icon: WeatherTypes.SNOWY },\n      77: { description: 'שלג', icon: WeatherTypes.SNOWY },\n      80: { description: 'ממטרי גשם', icon: WeatherTypes.RAINY },\n      81: { description: 'גשם', icon: WeatherTypes.RAINY },\n      82: { description: 'סופת גשמים', icon: WeatherTypes.RAINY },\n      85: { description: 'שלג', icon: WeatherTypes.SNOWY },\n      86: { description: 'מושלג', icon: WeatherTypes.SNOWY },\n      95: { description: 'סערת ברקים', icon: WeatherTypes.STORMY },\n      96: { description: 'סוער וגשום', icon: WeatherTypes.STORMY },\n      99: { description: 'סוער וגשום', icon: WeatherTypes.STORMY }\n    };\n\n    return weatherCodes[code] || { description: 'Unknown', icon: WeatherTypes.CLEAR };\n  }\n\n  // Fallback weather data if API fails\n  getFallbackWeatherData() {\n    return createWeatherData({\n      temperature: 25,\n      description: 'Partly cloudy',\n      icon: WeatherTypes.CLOUDY,\n      location: 'Israel',\n      maxTemperature: 28,\n      minTemperature: 22,\n      timestamp: new Date().toISOString()\n    });\n  }\n\n  // Check if cache is still valid\n  isCacheValid() {\n    return this.cacheTimestamp && \n           (Date.now() - this.cacheTimestamp) < this.cacheExpiry;\n  }\n\n  // Get weather icon\n  getWeatherIcon(weatherType) {\n    return weatherIcons[weatherType] || weatherIcons[WeatherTypes.CLEAR];\n  }\n\n  // Format temperature\n  formatTemperature(temp) {\n    return `${temp}°C`;\n  }\n\n  // Get weather description with emoji\n  getWeatherDescription(weather) {\n    const icon = this.getWeatherIcon(weather.icon);\n    return `${icon} ${weather.description}`;\n  }\n}\n\n// Create singleton instance\nconst weatherService = new WeatherService();\n\nexport default weatherService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}