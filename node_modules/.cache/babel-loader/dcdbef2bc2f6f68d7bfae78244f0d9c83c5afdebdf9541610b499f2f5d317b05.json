{"ast":null,"code":"import _objectSpread from\"/Users/hadascohen/experiments/localhub/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Data service for LocalHub - Data Layer\nimport{createLostAndFoundItem,createCarpoolItem,createUpdateItem,createEducationItem,createBusinessItem,createPhoneBookItem,createSellItem}from'../types';// Local storage keys\nconst STORAGE_KEYS={LOST_AND_FOUND:'localhub_lost_and_found',CARPOOL:'localhub_carpool',UPDATES:'localhub_updates',EDUCATION:'localhub_education',BUSINESS:'localhub_business',PHONE_BOOK:'localhub_phone_book',SELL:'localhub_sell'};// Data service class\nclass DataService{constructor(){this.initializeData();}// Initialize with sample data if storage is empty\ninitializeData(){Object.values(STORAGE_KEYS).forEach(key=>{if(!localStorage.getItem(key)){localStorage.setItem(key,JSON.stringify([]));}});}// Generic CRUD operations\nasync getAllItems(type){try{const data=localStorage.getItem(STORAGE_KEYS[type.toUpperCase()]);return data?JSON.parse(data):[];}catch(error){console.error(\"Error getting \".concat(type,\" items:\"),error);return[];}}async getItem(type,id){try{const items=await this.getAllItems(type);return items.find(item=>item.id===id);}catch(error){console.error(\"Error getting \".concat(type,\" item:\"),error);return null;}}async addItem(type,itemData){try{const items=await this.getAllItems(type);const newItem=this.createItemByType(type,_objectSpread(_objectSpread({},itemData),{},{id:this.generateId()}));items.push(newItem);await this.saveItems(type,items);return newItem;}catch(error){console.error(\"Error adding \".concat(type,\" item:\"),error);throw error;}}async updateItem(type,id,updates){try{const items=await this.getAllItems(type);const index=items.findIndex(item=>item.id===id);if(index===-1){throw new Error('Item not found');}items[index]=_objectSpread(_objectSpread(_objectSpread({},items[index]),updates),{},{updatedAt:new Date().toISOString()});await this.saveItems(type,items);return items[index];}catch(error){console.error(\"Error updating \".concat(type,\" item:\"),error);throw error;}}async deleteItem(type,id){try{const items=await this.getAllItems(type);const filteredItems=items.filter(item=>item.id!==id);await this.saveItems(type,filteredItems);return true;}catch(error){console.error(\"Error deleting \".concat(type,\" item:\"),error);throw error;}}// Save items to localStorage\nasync saveItems(type,items){try{localStorage.setItem(STORAGE_KEYS[type.toUpperCase()],JSON.stringify(items));}catch(error){console.error(\"Error saving \".concat(type,\" items:\"),error);throw error;}}// Create item by type\ncreateItemByType(type,data){switch(type.toLowerCase()){case'lost-and-found':return createLostAndFoundItem(data);case'carpool':return createCarpoolItem(data);case'updates':return createUpdateItem(data);case'education':return createEducationItem(data);case'business':return createBusinessItem(data);case'phone-book':return createPhoneBookItem(data);case'sell':return createSellItem(data);default:throw new Error(\"Unknown item type: \".concat(type));}}// Generate unique ID\ngenerateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2);}// Search items\nasync searchItems(type,query){try{const items=await this.getAllItems(type);const searchTerm=query.toLowerCase();return items.filter(item=>{return Object.values(item).some(value=>typeof value==='string'&&value.toLowerCase().includes(searchTerm));});}catch(error){console.error(\"Error searching \".concat(type,\" items:\"),error);return[];}}// Get items by category\nasync getItemsByCategory(type,category){try{const items=await this.getAllItems(type);return items.filter(item=>item.category===category);}catch(error){console.error(\"Error getting \".concat(type,\" items by category:\"),error);return[];}}// Get recent items\nasync getRecentItems(type){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;try{const items=await this.getAllItems(type);return items.sort((a,b)=>new Date(b.createdAt)-new Date(a.createdAt)).slice(0,limit);}catch(error){console.error(\"Error getting recent \".concat(type,\" items:\"),error);return[];}}}// Create singleton instance\nconst dataService=new DataService();export default dataService;","map":{"version":3,"names":["createLostAndFoundItem","createCarpoolItem","createUpdateItem","createEducationItem","createBusinessItem","createPhoneBookItem","createSellItem","STORAGE_KEYS","LOST_AND_FOUND","CARPOOL","UPDATES","EDUCATION","BUSINESS","PHONE_BOOK","SELL","DataService","constructor","initializeData","Object","values","forEach","key","localStorage","getItem","setItem","JSON","stringify","getAllItems","type","data","toUpperCase","parse","error","console","concat","id","items","find","item","addItem","itemData","newItem","createItemByType","_objectSpread","generateId","push","saveItems","updateItem","updates","index","findIndex","Error","updatedAt","Date","toISOString","deleteItem","filteredItems","filter","toLowerCase","now","toString","Math","random","substr","searchItems","query","searchTerm","some","value","includes","getItemsByCategory","category","getRecentItems","limit","arguments","length","undefined","sort","a","b","createdAt","slice","dataService"],"sources":["/Users/hadascohen/experiments/localhub/src/services/dataService.js"],"sourcesContent":["// Data service for LocalHub - Data Layer\n\nimport { \n  createLostAndFoundItem,\n  createCarpoolItem,\n  createUpdateItem,\n  createEducationItem,\n  createBusinessItem,\n  createPhoneBookItem,\n  createSellItem\n} from '../types';\n\n// Local storage keys\nconst STORAGE_KEYS = {\n  LOST_AND_FOUND: 'localhub_lost_and_found',\n  CARPOOL: 'localhub_carpool',\n  UPDATES: 'localhub_updates',\n  EDUCATION: 'localhub_education',\n  BUSINESS: 'localhub_business',\n  PHONE_BOOK: 'localhub_phone_book',\n  SELL: 'localhub_sell'\n};\n\n// Data service class\nclass DataService {\n  constructor() {\n    this.initializeData();\n  }\n\n  // Initialize with sample data if storage is empty\n  initializeData() {\n    Object.values(STORAGE_KEYS).forEach(key => {\n      if (!localStorage.getItem(key)) {\n        localStorage.setItem(key, JSON.stringify([]));\n      }\n    });\n  }\n\n  // Generic CRUD operations\n  async getAllItems(type) {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS[type.toUpperCase()]);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error(`Error getting ${type} items:`, error);\n      return [];\n    }\n  }\n\n  async getItem(type, id) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.find(item => item.id === id);\n    } catch (error) {\n      console.error(`Error getting ${type} item:`, error);\n      return null;\n    }\n  }\n\n  async addItem(type, itemData) {\n    try {\n      const items = await this.getAllItems(type);\n      const newItem = this.createItemByType(type, {\n        ...itemData,\n        id: this.generateId()\n      });\n      items.push(newItem);\n      await this.saveItems(type, items);\n      return newItem;\n    } catch (error) {\n      console.error(`Error adding ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  async updateItem(type, id, updates) {\n    try {\n      const items = await this.getAllItems(type);\n      const index = items.findIndex(item => item.id === id);\n      if (index === -1) {\n        throw new Error('Item not found');\n      }\n      items[index] = {\n        ...items[index],\n        ...updates,\n        updatedAt: new Date().toISOString()\n      };\n      await this.saveItems(type, items);\n      return items[index];\n    } catch (error) {\n      console.error(`Error updating ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  async deleteItem(type, id) {\n    try {\n      const items = await this.getAllItems(type);\n      const filteredItems = items.filter(item => item.id !== id);\n      await this.saveItems(type, filteredItems);\n      return true;\n    } catch (error) {\n      console.error(`Error deleting ${type} item:`, error);\n      throw error;\n    }\n  }\n\n  // Save items to localStorage\n  async saveItems(type, items) {\n    try {\n      localStorage.setItem(STORAGE_KEYS[type.toUpperCase()], JSON.stringify(items));\n    } catch (error) {\n      console.error(`Error saving ${type} items:`, error);\n      throw error;\n    }\n  }\n\n  // Create item by type\n  createItemByType(type, data) {\n    switch (type.toLowerCase()) {\n      case 'lost-and-found':\n        return createLostAndFoundItem(data);\n      case 'carpool':\n        return createCarpoolItem(data);\n      case 'updates':\n        return createUpdateItem(data);\n      case 'education':\n        return createEducationItem(data);\n      case 'business':\n        return createBusinessItem(data);\n      case 'phone-book':\n        return createPhoneBookItem(data);\n      case 'sell':\n        return createSellItem(data);\n      default:\n        throw new Error(`Unknown item type: ${type}`);\n    }\n  }\n\n  // Generate unique ID\n  generateId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n\n  // Search items\n  async searchItems(type, query) {\n    try {\n      const items = await this.getAllItems(type);\n      const searchTerm = query.toLowerCase();\n      return items.filter(item => {\n        return Object.values(item).some(value => \n          typeof value === 'string' && value.toLowerCase().includes(searchTerm)\n        );\n      });\n    } catch (error) {\n      console.error(`Error searching ${type} items:`, error);\n      return [];\n    }\n  }\n\n  // Get items by category\n  async getItemsByCategory(type, category) {\n    try {\n      const items = await this.getAllItems(type);\n      return items.filter(item => item.category === category);\n    } catch (error) {\n      console.error(`Error getting ${type} items by category:`, error);\n      return [];\n    }\n  }\n\n  // Get recent items\n  async getRecentItems(type, limit = 10) {\n    try {\n      const items = await this.getAllItems(type);\n      return items\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n        .slice(0, limit);\n    } catch (error) {\n      console.error(`Error getting recent ${type} items:`, error);\n      return [];\n    }\n  }\n}\n\n// Create singleton instance\nconst dataService = new DataService();\n\nexport default dataService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}